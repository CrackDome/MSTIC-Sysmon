<!--
    SysmonForLinux

    Copyright (c) Microsoft Corporation

    All rights reserved.

    MIT License

    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without
 restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom th
e Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
 AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISI
NG FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-->

<Sysmon schemaversion="4.22">
    <!--SYSMON META CONFIG-->
    <HashAlgorithms>md5,sha256,IMPHASH</HashAlgorithms> <!-- Both MD5 and SHA256 are the industry-standard algorithms for identifying files -->

    <EventFiltering>

    <RuleGroup name="" groupRelation="or">
	    <ProcessCreate onmatch="exclude">
		<Rule name="" groupRelation="or">  
            		<CommandLine condition="begin with">sh -c /opt/omi/bin/omicli </CommandLine>
			<Image condition="is">/opt/omi/bin/omicli</Image>
			<Image condition="is">/opt/microsoft/auoms/bin/auomsctl</Image>
            		<CommandLine condition="is">grep =</CommandLine>
            		<CommandLine condition="is">pgrep -U omsagent omiagent</CommandLine>
	    		<Image condition="is">/usr/sbin/logrotate</Image>
			<ParentImage condition="is">/opt/microsoft/auoms/bin/auomsctl</ParentImage>  <!--  auoms agent  -->
			<ParentImage condition="is">/opt/microsoft/omsagent/ruby/bin/ruby</ParentImage>   <!-- omsagent  -->
			<ParentImage condition="is">/usr/local/qualys/command-agent/bin/scan_manifest</ParentImage>  <!-- Qualys agent -->
            		<CommandLine condition="is">/bin/sh -c [ -f /etc/krb5.keytab ] &amp;&amp; [ \( ! -f /etc/opt/omi/creds/omi.keytab \) -o \( /etc/krb5.keytab -nt /etc/opt/omi/creds/omi.keyta
				b \) ] &amp;&amp; /opt/omi/bin/support/ktstrip /etc/krb5.keytab /etc/opt/omi/creds/omi.keytab >/dev/null 2>&amp;1 || true</CommandLine>
		</Rule>
		<Rule name="DNSIptablesVersion" groupRelation="and">   <!-- AzureDNS common command before doing firewall settings -->
			<ParentImage condition="is">/usr/bin/python3.6</ParentImage>
			<CommandLine condition="is">iptables --version</CommandLine>
		</Rule>
		<Rule name="DNSIptablesSet" groupRelation="and">     <!-- AzureDNS firewall setting -->
			<ParentImage condition="is">/usr/bin/python3.6</ParentImage>
			<CommandLine condition="is">iptables -t security -C OUTPUT -d 168.63.129.16 -p tcp -m conntrack --ctstate INVALID,NEW -j DROP -w</CommandLine>
		</Rule>
		<Rule name="OmsagentPython" groupRelation="and">    <!-- Common omsagent commands -->
			<User condition="is">omsagent</User>
			<ParentImage condition="is">/usr/bin/python2.7</ParentImage>
		</Rule>
		<Rule name="AgentXtables" groupRelation="and">   <!--  common agent firewall commands  -->
			<Image condition="is">/sbin/xtables-multi</Image>
			<CurrentDirectory condition="begin with">/var/lib/waagent/</CurrentDirectory>
		</Rule>
		<Rule name="OmsagentDir" groupRelation="and">    <!--  omsagent directory  -->
			<User condition="is">omsagent</User>
			<CurrentDirectory condition="begin with">/var/opt/microsoft/omsagent/</CurrentDirectory>
		</Rule>
		<Rule name="OmsagentScriptDir" groupRelation="and">  <!--  omsagent script directory  -->
			<User condition="is">omsagent</User>
			<CurrentDirectory condition="begin with">/opt/microsoft/omsconfig/Scripts/</CurrentDirectory>
		</Rule>	
        </ProcessCreate>
    </RuleGroup>
    <RuleGroup name="" groupRelation="or">
        <FileCreate onmatch="exclude">
            <Image condition="is">/opt/omi/bin/omicli</Image>
            <Image condition="is">/usr/sbin/logrotate</Image>
            <Image condition="is">/opt/microsoft/omsagent/ruby/bin/ruby</Image>
            <Image condition="is">/sbin/xtables-multi</Image>
            <TargetFilename condition="is">/dev/null</TargetFilename>
            <TargetFilename condition="begin with">/var/log/azure/</TargetFilename>
            <TargetFilename condition="begin with">/var/opt/omi/</TargetFilename>
	    	<TargetFilename condition="begin with">/var/lib/waagent/</TargetFilename>
	    	<TargetFilename condition="begin with">/var/opt/microsoft/omsconfig/</TargetFilename>  <!-- oms agent config -->
	    	<TargetFilename condition="begin with">/etc/opt/omi/conf/omsconfig/</TargetFilename>  <!-- oms agent config -->
	    	<TargetFilename condition="begin with">/var/opt/microsoft/linuxmonagent/</TargetFilename> <!-- Linux monitoring agent -->
	    	<TargetFilename condition="begin with">/var/opt/microsoft/omsagent/</TargetFilename>  <!-- oms agent config -->
		<Rule name="OpenPGP method" groupRelation="and">    <!-- Common OpenPGP method -->
			<Image condition="is">/usr/lib/apt/methods/gpgv</Image>
			<TargetFilename condition="begin with">/tmp/apt.conf.</TargetFilename>
		</Rule>
		<Rule name="ClamscanTempFiles" groupRelation="and">  <!--  AV writing tmp files -->
			<Image condition="is">/usr/bin/clamscan</Image>
			<TargetFilename condition="begin with">/tmp/</TargetFilename>
		</Rule>
		<Rule name="AptGetTempFiles" groupRelation="and">  <!--  Apt-get tmp files  -->
			<Image condition="is">/usr/bin/apt-get</Image>
			<TargetFilename condition="begin with">/tmp/fileutl.message</TargetFilename>
		</Rule>
		<Rule name="MicrosoftAgentStorage" groupRelation="and">   <!--  Microsoft dependency agent file storage  -->
			<Image condition="is">/opt/microsoft/dependency-agent/bin/microsoft-dependency-agent</Image>
			<TargetFilename condition="begin with">	/var/opt/microsoft/dependency-agent/storage/</TargetFilename>
		</Rule>
        </FileCreate>
    </RuleGroup>

    <RuleGroup name="" groupRelation="or">
	    <FileDelete onmatch="exclude">
		<TargetFilename condition="begin with">/etc/opt/omi/conf/omsconfig/configuration/</TargetFilename>   <!--   omsagent configuration files  -->
		<TargetFilename condition="begin with">/tmp/fileutl.message</TargetFilename>   <!-- common temp file deletion  -->
		<TargetFilename condition="begin with">/var/lib/waagent/events/</TargetFilename>  <!-- common waagent event deletion  -->	
		<Rule name="ClamAV" groupRelation="and">
	    		<Image condition="is">/usr/bin/clamscan</Image>
	    		<TargetFilename condition="end with">.tmp</TargetFilename>
		</Rule>
		<Rule name="OMSRuby" groupRelation="and">
			<Image condition="is">/opt/microsoft/omsagent/ruby/bin/ruby</Image>
			<User condition="is">omsagent</User>
		</Rule>
		<Rule name="MSFTDepAgt" groupRelation="and">
			<Image condition="is">/opt/microsoft/dependency-agent/bin/microsoft-dependency-agent</Image>
			<TargetFilename condition="begin with">/var/opt/microsoft/dependency-agent/</TargetFilename>
		</Rule>	
		<Rule name="OMSagentTemp" groupRelation="and">
			<User condition="is">omsagent</User>
			<TargetFilename condition="begin with">/var/opt/microsoft/omsagent/</TargetFilename>
		</Rule>
	   </FileDelete>
    </RuleGroup>
    <RuleGroup name="" groupRelation="or">
	    <NetworkConnect onmatch="exclude">
		<Rule name="" groupRelation="or">
	    		<Image condition="is">/lib/systemd/systemd-resolved</Image>
			<Image condition="is">/opt/microsoft/omsagent/ruby/bin/ruby</Image>
			<DestinationIp condition="is">168.63.129.16</DestinationIp>   <!-- Azure DNS -->
			<DestinationIp condition="is">169.254.169.254</DestinationIp>  <!-- Azure Instance Metadata Service -->
    		</Rule>
		<Rule name="Rsyslogd" groupRelation="and">
			<Image condition="is">/usr/sbin/rsyslogd</Image>
			<DestinationIp condition="is">127.0.0.1</DestinationIp>
		</Rule>
		<Rule name="homeDNS" groupRelation="and">
			<SourceIp condition="is">127.0.0.1</SourceIp>
			<DestinationIp condition="is">127.0.0.53</DestinationIp>	
		</Rule>
	    </NetworkConnect>
    </RuleGroup>
    
    </EventFiltering>
</Sysmon>
